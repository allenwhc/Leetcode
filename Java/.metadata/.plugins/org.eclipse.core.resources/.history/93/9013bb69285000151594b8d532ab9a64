
public class Solution {
	public static int countUnivalSubtrees(TreeNode root){
		if(root==null) return 0;
		int count=0;
		if(isUnivalSubtree(root))
			count++;
		countUnivalSubtrees(root.left);
		countUnivalSubtrees(root.right);
		return count;
	}
	
	private static boolean isUnivalSubtree(TreeNode root){
		if(root==null) return false;
		//If reach to leaf node, no subtree exists
		if(root.left==null && root.right==null) return false;
		if(root.left!=null){
			if(root.val==root.left.val) return true;
			else return false;
		}
		if(root.right!=null){
			if(root.val==root.right.val) return true;
			else return false;
		}
		return isUnivalSubtree(root.left) || isUnivalSubtree(root.right);
	}
	
	public static void main(String[] args){
		TreeNode root=new TreeNode(5);
		root.left=new TreeNode(1);
		root.right=new TreeNode(5);
		root.left.left=new TreeNode(5);
		root.left.right=new TreeNode(5);
		root.right.right=new TreeNode(5);
		System.out.println("The binary tree is:");
		TreeNode.printBinaryTree(root, 0);
		System.out.println("Number of univalue subtrees: "+countUnivalSubtrees(root));
	}
}
