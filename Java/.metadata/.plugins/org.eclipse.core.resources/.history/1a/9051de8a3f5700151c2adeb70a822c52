import java.util.HashMap;

public class Solution {
    public static int lengthOfLongestSubstring(String s) {
        int n=s.length();
        if(n<=1) return n;
        HashMap<Character, Integer> map=new HashMap<>();
        int len=0;
        for(int i=0; i<n; i++){
    		int leftMost=n+1;
        	char c=s.charAt(i);
        	if(!map.containsKey(c))
        		map.put(c, i);
        	else{
        		for(char key:map.keySet())
        			leftMost=Math.min(leftMost, map.get(key));
        		map.clear();
        	}
    		len=Math.max(len, i-leftMost);
        }
        return len;
    }
    
    public static void main(String[] args) {
		String s="au";
		System.out.println("Length of longest non-repeating-character substring in '"+s+"' is: "+lengthOfLongestSubstring(s));
	}
}
