import java.util.Stack;

public class Solution {
	private static Stack<String> stack=new Stack<>();
	public static String simplifyPath(String path){
		int n=path.length();
		if(n==0) return "";
		int i=0;
		String str=new String();
		while(i<n){
			while(path.charAt(i)=='/' && i<n) i++;
			if(i==n) break;
			int start=i;
			while(path.charAt(i)!='/' && i<n) i++;
			int end=i-1;
			System.out.println(start+","+end);
			str=path.substring(start, end);
			if(str==".."){
				while(!stack.isEmpty())
					stack.pop();
			}
			else if(str!=".")
				stack.push(str);
		}
//		if(stack.isEmpty())
//			return "/";
//		else{
//
//			System.out.println(stack.peek());
//		}
		return "";
	}
	
	public static void main(String[] args) {
		String path="/home//..//file///leetcode/";
		System.out.println("The simplified path of '"+path+"' is: "+simplifyPath(path));
//		String[] paths={"/home//..//file///leetcode/","/a/./b/../../c/"};
//		String[] res=new String[paths.length];
//		for(int i=0; i<paths.length; i++)
//			res[i]=simplifyPath(paths[i]);
//		for(int i=0; i<paths.length; i++)
//			System.out.println("The simplified path of '"+paths[i]+"' is: "+res[i]);
	}
}
